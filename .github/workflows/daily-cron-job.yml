name: Daily Trading Data Processing

on:
  schedule:
    - cron: "1 0 * * *"
  workflow_dispatch:

permissions:
  actions: write

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download row-tracker from previous successful workflow run (if exists)
        run: |
          echo "Trying to find latest row-tracker artifact..."

          ARTIFACT_INFO=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")

          ARTIFACT_ID=$(echo "$ARTIFACT_INFO" | jq -r '.artifacts[] | select(.name=="row-tracker") | .id' | head -n 1)

          if [ -z "$ARTIFACT_ID" ]; then
            echo "No previous artifact found, proceeding without it."
          else
            echo "Found artifact ID: $ARTIFACT_ID"
            curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -o artifact.zip \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"
            
            unzip artifact.zip
          fi
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install qpdf
        run: sudo apt-get update && sudo apt-get install -y qpdf

      - name: Install dependencies
        run: npm install
      
      - name: Determine dates to process
        id: dates
        run: |
          if [ -f row_tracker_updated.json ]; then
            LAST_DATE=$(jq -r '.lastUpdatedRow' row_tracker_updated.json)
          else
            LAST_DATE=$(date -I -d "yesterday")
          fi
          START=$(date -I -d "$LAST_DATE + 1 day")
          END=$(date -I)
          d=$START
          while [ "$(date -d "$d" +%s)" -le "$(date -d "$END" +%s)" ]; do
            echo "$d" >> dates.txt
            d=$(date -I -d "$d + 1 day")
          done
          cat dates.txt

      - name: Run Fetch and Parse
        run: |
          while read DATE; do
            echo "Processing $DATE"
            rm -rf data daily_summary.json
            mkdir -p data
            EMAILS='${{ secrets.EMAILS }}' PASSWORDS='${{ secrets.PASSWORDS }}' \
            ACCOUNT_IDS='${{ secrets.ACCOUNT_IDS }}' PDF_PASSWORDS='${{ secrets.PDF_PASSWORDS }}' \
            TARGET_DATE=$DATE npm run fetch && TARGET_DATE=$DATE npm run parse

            count=$(find ./data -type f -name '*_decrypted.pdf' | wc -l)
            if [ "$count" -eq 0 ]; then
              echo "ðŸ“­ No decrypted PDF files found for $DATE. Skipping sheet update."
              continue
            fi

            GOOGLE_CREDENTIALS='${{ secrets.GOOGLE_CREDENTIALS }}' \
            GOOGLE_SHEET_ID='${{ secrets.GOOGLE_SHEET_ID }}' \
            SHEET_GID='${{ secrets.SHEET_GID }}' SHEET_NAME='${{ secrets.SHEET_NAME }}' \
            TARGET_DATE=$DATE npm run sheet
          done < dates.txt

      - name: Upload updated row tracker artifacts
        uses: actions/upload-artifact@v4
        with:
          name: row-tracker
          path: |
            row_tracker.json
            row_tracker_updated.json

      - name: Delete old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: "2 day"
          skip-recent: 5
