name: Daily Trading Data Processing

on:
  schedule:
    - cron: "1 0 * * *"
  workflow_dispatch:

permissions:
  actions: write

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download row-tracker from previous successful workflow run (if exists)
        run: |
          echo "Trying to find latest row-tracker artifact..."

          ARTIFACT_INFO=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")

          ARTIFACT_ID=$(echo "$ARTIFACT_INFO" | jq -r '.artifacts[] | select(.name=="row-tracker") | .id' | head -n 1)

          if [ -z "$ARTIFACT_ID" ]; then
            echo "No previous artifact found, proceeding without it."
          else
            echo "Found artifact ID: $ARTIFACT_ID"
            curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -o artifact.zip \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"
            
            unzip artifact.zip
          fi
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install qpdf
        run: sudo apt-get update && sudo apt-get install -y qpdf

      - name: Install dependencies
        run: npm install

      - name: Check sheet dates
        run: npm run check-dates
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          SHEET_NAME: ${{ secrets.SHEET_NAME }}

      - name: Process gap dates
        run: |
          if [ ! -f gap_dates.txt ]; then
            echo "No gap dates found. Exiting."
            exit 0
          fi
          updated=false
          while IFS= read -r date; do
            echo "Processing gap date $date"
            TARGET_DATE="$date" npm run fetch
            TARGET_DATE="$date" npm run parse
            count=$(find ./data -type f -name '*_decrypted.pdf' | wc -l)
            if [ "$count" -eq 0 ]; then
              echo "ðŸ“­ No decrypted PDF files found for $date. Skipping."
              rm -rf ./data
              continue
            fi
            echo "âœ… Decrypted PDF files found: $count"
            TARGET_DATE="$date" npm run sheet
            updated=true
            rm -rf ./data
          done < gap_dates.txt
          echo "updated=$updated" >> $GITHUB_ENV
        env:
          EMAILS: ${{ secrets.EMAILS }}
          PASSWORDS: ${{ secrets.PASSWORDS }}
          ACCOUNT_IDS: ${{ secrets.ACCOUNT_IDS }}
          PDF_PASSWORDS: ${{ secrets.PDF_PASSWORDS }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          SHEET_GID: ${{ secrets.SHEET_GID }}
          SHEET_NAME: ${{ secrets.SHEET_NAME }}

      - name: Upload updated row_tracker.json as artifact
        if: env.updated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: row-tracker
          path: row_tracker.json

      - name: Delete old artifacts
        if: env.updated == 'true'
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: "2 day"
          skip-recent: 5
