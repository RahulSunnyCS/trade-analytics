name: Daily Trading Data Processing

on:
  schedule:
    - cron: "1 0 * * *"
  workflow_dispatch:

permissions:
  actions: write

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download row-tracker from previous successful workflow run (if exists)
        run: |
          echo "Trying to find latest row-tracker artifact..."

          ARTIFACT_INFO=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")

          ARTIFACT_ID=$(echo "$ARTIFACT_INFO" | jq -r '.artifacts[] | select(.name=="row-tracker") | .id' | head -n 1)

          if [ -z "$ARTIFACT_ID" ]; then
            echo "No previous artifact found, proceeding without it."
          else
            echo "Found artifact ID: $ARTIFACT_ID"
            curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -o artifact.zip \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"

            unzip artifact.zip
          fi
        shell: bash

      - name: Determine dates to process
        run: |
          TODAY=$(date -u +%Y-%m-%d)
          if [ -f row_tracker_updated.json ]; then
            LAST_DATE=$(jq -r '.lastUpdatedRow' row_tracker_updated.json)
          fi
          if [ -z "$LAST_DATE" ] || [ "$LAST_DATE" = "null" ]; then
            LAST_DATE=$(date -u -d "$TODAY -1 day" +%Y-%m-%d)
          fi
          START=$(date -u -d "$LAST_DATE +1 day" +%Y-%m-%d)
          echo "Generating dates from $START to $TODAY"
          rm -f dates.txt
          current="$START"
          while [ "$(date -u -d "$current" +%s)" -le "$(date -u -d "$TODAY" +%s)" ]; do
            echo "$current" >> dates.txt
            current=$(date -u -d "$current +1 day" +%Y-%m-%d)
          done
          cat dates.txt
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install qpdf
        run: sudo apt-get update && sudo apt-get install -y qpdf

      - name: Install dependencies
        run: npm install

      - name: Process pending dates
        run: |
          while IFS= read -r DATE; do
            echo "Processing $DATE"
            rm -rf data
            mkdir data
            TARGET_DATE=$DATE npm run fetch && TARGET_DATE=$DATE npm run parse

            count=$(find ./data -type f -name '*_decrypted.pdf' | wc -l)
            if [ "$count" -eq 0 ]; then
              echo "No decrypted PDF files for $DATE. Skipping sheet update."
              mv data "data_$DATE"
              continue
            fi

            TARGET_DATE=$DATE npm run sheet
            mv data "data_$DATE"
            if [ -f daily_summary.json ]; then mv daily_summary.json "daily_summary_$DATE.json"; fi
          done < dates.txt
        env:
          EMAILS: ${{ secrets.EMAILS }}
          PASSWORDS: ${{ secrets.PASSWORDS }}
          ACCOUNT_IDS: ${{ secrets.ACCOUNT_IDS }}
          PDF_PASSWORDS: ${{ secrets.PDF_PASSWORDS }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          SHEET_GID: ${{ secrets.SHEET_GID }}
          SHEET_NAME: ${{ secrets.SHEET_NAME }}

      - name: Upload updated row_tracker_updated.json as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: row-tracker
          path: row_tracker_updated.json

      - name: Delete old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: "2 day"
          skip-recent: 5
